<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns:xs="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified" attributeFormDefault="unqualified"
           targetNamespace="http://www.mulesoft.org/schema/mule/munit">
    <xs:import namespace="http://www.w3.org/XML/1998/namespace"></xs:import>
    <xs:import schemaLocation="http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
               namespace="http://www.springframework.org/schema/beans"></xs:import>
    <xs:import schemaLocation="http://www.mulesoft.org/schema/mule/core/current/mule.xsd"
               namespace="http://www.mulesoft.org/schema/mule/core"></xs:import>

    <xs:element xmlns:mule="http://www.mulesoft.org/schema/mule/core" name="config"
                substitutionGroup="mule:abstract-extension">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="mule:abstractExtensionType">
                    <xs:annotation>
                        <xs:documentation>&lt;p&gt;Module for asserting in Munit tests.&lt;/p&gt;</xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element name="exclude-inbound-mocking" maxOccurs="1" minOccurs="0">
                            <xs:annotation>
                                <xs:documentation></xs:documentation>
                            </xs:annotation>
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="flow-name" maxOccurs="unbounded" minOccurs="0">
                                        <xs:complexType>
                                            <xs:simpleContent>
                                                <xs:extension base="xs:string"/>
                                            </xs:simpleContent>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="name" use="optional" type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Give a name to this configuration so it can be later referenced by
                                org.mule.munit.config-ref.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="mock-inbounds" use="optional" type="mule:substitutableBoolean" default="true">
                        <xs:annotation>
                            <xs:documentation>Defines if the inbounds are mocked or not</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                    <xs:attribute name="mock-connectors" use="optional" type="mule:substitutableBoolean" default="true">
                        <xs:annotation>
                            <xs:documentation>Defines if the app connectors(transports not cloud connectors) for outbound/inbound endpoints have to be
                                mocked. If they are then all
                                outbound endpoints/inbound endpoints must be mocked.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="assert-payload-equals" substitutionGroup="mule:abstract-message-processor" type="AssertPayloadEqualsType">
        <xs:annotation>
            <xs:documentation>&lt;p&gt;Assert that the payload is equal to an expected value.&lt;/p&gt;
                &lt;p&gt;The payloadIs-ref can be any Object/expression. &lt;/p&gt;
                &lt;p&gt;The assertion Fails if the payload is not equal to the
                payloadIs-ref&lt;/p&gt;</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="AssertPayloadEqualsType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
                <xs:attribute name="message" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description message to be shown in case of failure.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="expectedValue" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Expected Value</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="assert-true" substitutionGroup="mule:abstract-message-processor" type="AssertTrueType">
        <xs:annotation>
            <xs:documentation>&lt;p&gt;Assert for a true expression.&lt;/p&gt;</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="AssertTrueType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                          base="mule:abstractMessageProcessorType">

                <xs:attribute name="message" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description message to be shown in case of failure.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/munit" name="condition" use="required"
                              type="mule:substitutableBoolean">
                    <xs:annotation>
                        <xs:documentation>Boolean expression</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="assert-on-equals" substitutionGroup="mule:abstract-message-processor" type="AssertOnEqualsType">
        <xs:annotation>
            <xs:documentation>&lt;p&gt;Check that two objects are equal.&lt;/p&gt;</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="AssertOnEqualsType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                          base="mule:abstractMessageProcessorType">

                <xs:attribute name="message" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description message to be shown in case of failure.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="expectedValue" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Expected value</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="actualValue" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Actual value</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="add-expected" substitutionGroup="mule:abstract-message-processor" type="AddExpectedType">
        <xs:annotation>
            <xs:documentation>&lt;p&gt;Check that two objects are equal.&lt;/p&gt;</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="AddExpectedType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                          base="mule:abstractMessageProcessorType">

                <xs:attribute name="value-ref" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Expected value</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="reset-calls" substitutionGroup="mule:abstract-message-processor" type="ResetCallsType">
        <xs:annotation>
            <xs:documentation>&lt;p&gt;Reset assert component.&lt;/p&gt;</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="ResetCallsType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                          base="mule:abstractMessageProcessorType">

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="validate-calls" substitutionGroup="mule:abstract-message-processor" type="ValidateCallsType">
        <xs:annotation>
            <xs:documentation>&lt;p&gt;Validate all expected calls were called.&lt;/p&gt;</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="ValidateCallsType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                          base="mule:abstractMessageProcessorType">

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="assert-not-same" substitutionGroup="mule:abstract-message-processor" type="AssertNotSameType">
        <xs:annotation>
            <xs:documentation>Assert two objects are not equal</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="AssertNotSameType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                          base="mule:abstractMessageProcessorType">
                <xs:attribute name="message" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>description message</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="expectedValue" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>expected value</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="actualValue" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>real value</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="assert-false" substitutionGroup="mule:abstract-message-processor" type="AssertFalseType">
        <xs:annotation>
            <xs:documentation>&lt;p&gt;Check if an expression is false.&lt;/p&gt;</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="AssertFalseType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                          base="mule:abstractMessageProcessorType">

                <xs:attribute name="message" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description message to be shown in case of failure.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/munit" name="condition" use="required"
                              type="mule:substitutableBoolean">
                    <xs:annotation>
                        <xs:documentation>Boolean expression</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="assert-not-null" substitutionGroup="mule:abstract-message-processor" type="AssertNotNullType">
        <xs:annotation>
            <xs:documentation>&lt;p&gt;Assert for a Not Null payload. &lt;/p&gt;</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="AssertNotNullType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                          base="mule:abstractMessageProcessorType">

                <xs:attribute name="message" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description message to be shown in case of failure.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="assert-null" substitutionGroup="mule:abstract-message-processor" type="AssertNullType">
        <xs:annotation>
            <xs:documentation>&lt;p&gt;Assert Null Payload. &lt;/p&gt;</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="AssertNullType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                          base="mule:abstractMessageProcessorType">
                <xs:attribute name="message" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description message to be shown in case of failure.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="set" substitutionGroup="mule:abstract-message-processor" type="SetType">
        <xs:annotation>
            <xs:documentation>&lt;p&gt;Defines the payload for testing.&lt;/p&gt;</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="SetType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                          base="mule:abstractMessageProcessorType">
                <xs:sequence>
                    <xs:element name="invocation-properties" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>the Return Payload</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:choice>
                                <xs:sequence>
                                    <xs:element name="invocation-property" maxOccurs="unbounded" minOccurs="0">
                                        <xs:complexType>
                                            <xs:simpleContent>
                                                <xs:extension base="xs:string">
                                                    <xs:attribute type="xs:string" use="optional" name="encoding"></xs:attribute>
                                                    <xs:attribute type="xs:string" use="optional" name="mimeType"></xs:attribute>
                                                    <xs:attribute name="value" use="optional" type="xs:string"></xs:attribute>
                                                    <xs:attribute name="key" type="xs:string"></xs:attribute>
                                                </xs:extension>
                                            </xs:simpleContent>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                                <xs:sequence>
                                    <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"></xs:any>
                                </xs:sequence>
                            </xs:choice>
                            <xs:attribute name="ref" use="optional" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>The reference object for this parameter</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="inbound-properties" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>inbound properties</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:choice>
                                <xs:sequence>
                                    <xs:element name="inbound-property" maxOccurs="unbounded" minOccurs="0">
                                        <xs:complexType>
                                            <xs:simpleContent>
                                                <xs:extension base="xs:string">
                                                    <xs:attribute type="xs:string" use="optional" name="encoding"></xs:attribute>
                                                    <xs:attribute type="xs:string" use="optional" name="mimeType"></xs:attribute>
                                                    <xs:attribute name="value" use="optional" type="xs:string"></xs:attribute>
                                                    <xs:attribute name="key" type="xs:string"></xs:attribute>
                                                </xs:extension>
                                            </xs:simpleContent>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                                <xs:sequence>
                                    <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"></xs:any>
                                </xs:sequence>
                            </xs:choice>
                            <xs:attribute name="ref" use="optional" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>The reference object for this parameter</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="session-properties" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>invocation properties</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:choice>
                                <xs:sequence>
                                    <xs:element name="session-property" maxOccurs="unbounded" minOccurs="0">
                                        <xs:complexType>
                                            <xs:simpleContent>
                                                <xs:extension base="xs:string">
                                                    <xs:attribute type="xs:string" use="optional" name="encoding"></xs:attribute>
                                                    <xs:attribute type="xs:string" use="optional" name="mimeType"></xs:attribute>
                                                    <xs:attribute name="value" use="optional" type="xs:string"></xs:attribute>
                                                    <xs:attribute name="key" type="xs:string"></xs:attribute>
                                                </xs:extension>
                                            </xs:simpleContent>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                                <xs:sequence>
                                    <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"></xs:any>
                                </xs:sequence>
                            </xs:choice>
                            <xs:attribute name="ref" use="optional" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>The reference object for this parameter</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="outbound-properties" maxOccurs="1" minOccurs="0">
                        <xs:annotation>
                            <xs:documentation>invocation session properties</xs:documentation>
                        </xs:annotation>
                        <xs:complexType>
                            <xs:choice>
                                <xs:sequence>
                                    <xs:element name="outbound-property" maxOccurs="unbounded" minOccurs="0">
                                        <xs:complexType>
                                            <xs:simpleContent>
                                                <xs:extension base="xs:string">
                                                    <xs:attribute type="xs:string" use="optional" name="encoding"></xs:attribute>
                                                    <xs:attribute type="xs:string" use="optional" name="mimeType"></xs:attribute>
                                                    <xs:attribute name="value" use="optional" type="xs:string"></xs:attribute>
                                                    <xs:attribute name="key" type="xs:string"></xs:attribute>
                                                </xs:extension>
                                            </xs:simpleContent>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                                <xs:sequence>
                                    <xs:any maxOccurs="unbounded" minOccurs="0" processContents="lax"></xs:any>
                                </xs:sequence>
                            </xs:choice>
                            <xs:attribute name="ref" use="optional" type="xs:string">
                                <xs:annotation>
                                    <xs:documentation>The reference object for this parameter</xs:documentation>
                                </xs:annotation>
                            </xs:attribute>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="payload"  use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The actual payload to be set in the mule message</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="encoding" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The Payload encoding</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="mimeType" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The Payload mimeType</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="set-null-payload" substitutionGroup="mule:abstract-message-processor" type="SetNullPayloadType">
        <xs:annotation>
            <xs:documentation>&lt;p&gt;Defines a Null payload for testing.&lt;/p&gt;</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="SetNullPayloadType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                          base="mule:abstractMessageProcessorType">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="fail" substitutionGroup="mule:abstract-message-processor" type="FailType">
        <xs:annotation>
            <xs:documentation>&lt;p&gt;Fail assertion.&lt;/p&gt;</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="FailType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                          base="mule:abstractMessageProcessorType">
                <xs:attribute name="message" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description message to be shown in case of failure.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="munitType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:baseFlowConstructType">
                <xs:sequence>
                    <xs:group xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                              ref="mule:messageProcessorOrOutboundEndpoint" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="description" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description message to be shown in case of failure.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="munitTestType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:baseFlowConstructType">
                <xs:sequence>
                    <xs:group xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                              ref="mule:messageProcessorOrOutboundEndpoint" maxOccurs="unbounded"/>
                    <xs:element ref="mule:legacy-abstract-exception-strategy" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="description" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Description message to be shown in case of failure.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ignore" use="optional" type="mule:substitutableBoolean" default="false">
                    <xs:annotation>
                        <xs:documentation>Defines if the test must be ignored.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="expectException" use="optional" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Exception expression to match</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>



    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                substitutionGroup="mule:abstract-flow-construct" name="test" type="munitTestType">
        <xs:annotation>
            <xs:documentation>
                The test flow of Munit
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="before-test" substitutionGroup="mule:abstract-flow-construct" type="munitType">
        <xs:annotation>
            <xs:documentation>
                Flow to be run before each test flow
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="after-test" substitutionGroup="mule:abstract-flow-construct" type="munitType">
        <xs:annotation>
            <xs:documentation>
                Flow to be run after each test flow
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="before-suite" substitutionGroup="mule:abstract-flow-construct" type="munitType">
        <xs:annotation>
            <xs:documentation>
                Flow to be run before a munit suite
            </xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="after-suite" substitutionGroup="mule:abstract-flow-construct" type="munitType">
        <xs:annotation>
            <xs:documentation>
                Flow to be run after a munit suite
            </xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element xmlns="http://www.mulesoft.org/schema/mule/munit" xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                name="run-custom" substitutionGroup="mule:abstract-message-processor" type="RunCustomType">
        <xs:annotation>
            <xs:documentation>Run a custom assertion</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="RunCustomType">
        <xs:complexContent>
            <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core"
                          base="mule:abstractMessageProcessorType">

                <xs:attribute name="assertion-ref" use="required" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The assertion to run</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>