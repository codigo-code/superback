<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:ns2="http://www.mulesoft.org/schema/mule/devkit" xmlns:mule="http://www.mulesoft.org/schema/mule/core" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.mulesoft.org/schema/mule/mock" attributeFormDefault="unqualified" elementFormDefault="qualified">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace"></xs:import>
  <xs:import namespace="http://www.springframework.org/schema/beans" schemaLocation="http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"></xs:import>
  <xs:import namespace="http://www.mulesoft.org/schema/mule/core" schemaLocation="http://www.mulesoft.org/schema/mule/core/current/mule.xsd"></xs:import>
  <xs:element xmlns:mule="http://www.mulesoft.org/schema/mule/core" substitutionGroup="mule:abstract-extension" name="config" ns2:javaClass="org.mule.munit.adapters.MockModuleProcessAdapter">
    <xs:complexType>
      <xs:complexContent>
        <xs:extension base="mule:abstractExtensionType">
          <xs:annotation>
            <xs:documentation>&lt;p&gt;
Munit module for mocking message processors.
&lt;p/&gt;
&lt;/p&gt;</xs:documentation>
          </xs:annotation>
          <xs:attribute type="xs:string" use="optional" name="name">
            <xs:annotation>
              <xs:documentation>Give a name to this configuration so it can be later referenced by config-ref.</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:extension>
      </xs:complexContent>
    </xs:complexType>
  </xs:element>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/mock" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="WhenType" substitutionGroup="mule:abstract-message-processor" name="when">
    <xs:annotation>
      <xs:documentation>&lt;p&gt;Define what the mock must return on a message processor call.&lt;/p&gt;
&lt;p/&gt;
&lt;p&gt;If the message processor doesn't return any value then there is no need to define an expect.&lt;/p&gt;
&lt;p/&gt;
&lt;p&gt;You can define the message processor parameters in the same order they appear in the API documentation. In
order to define the behaviour on that particular case.&lt;/p&gt;
&lt;p/&gt;</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="AttributeObjectType">
    <xs:sequence></xs:sequence>
    <xs:attribute type="xs:string" use="optional" name="name">
      <xs:annotation>
        <xs:documentation>&lt;p&gt;The name of the attribute of the message processor&lt;/p&gt;</xs:documentation>
      </xs:annotation>
    </xs:attribute>

      <xs:attribute type="xs:string" use="optional" name="whereValue">
          <xs:annotation>
              <xs:documentation>&lt;p&gt;The object that need to match (can be a matcher expression)&lt;/p&gt;</xs:documentation>
          </xs:annotation>
      </xs:attribute>
    <xs:attribute type="xs:string" use="optional" name="ref">
      <xs:annotation>
        <xs:documentation>The reference object for this parameter</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="MunitMuleMessageObjectType">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="invocation-properties">
        <xs:annotation>
          <xs:documentation></xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice>
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="invocation-property">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute type="xs:string" use="optional" name="encoding"></xs:attribute>
                      <xs:attribute type="xs:string" use="optional" name="mimeType"></xs:attribute>
                      <xs:attribute type="xs:string" use="optional" name="value"></xs:attribute>
                      <xs:attribute type="xs:string" name="key"></xs:attribute>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:sequence>
              <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"></xs:any>
            </xs:sequence>
          </xs:choice>
          <xs:attribute type="xs:string" use="optional" name="ref">
            <xs:annotation>
              <xs:documentation>The reference object for this parameter</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="inbound-properties">
        <xs:annotation>
          <xs:documentation></xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice>
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="inbound-property">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                        <xs:attribute type="xs:string" use="optional" name="encoding"></xs:attribute>
                        <xs:attribute type="xs:string" use="optional" name="mimeType"></xs:attribute>
                        <xs:attribute type="xs:string" use="optional" name="value"></xs:attribute>
                      <xs:attribute type="xs:string" name="key"></xs:attribute>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:sequence>
              <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"></xs:any>
            </xs:sequence>
          </xs:choice>
          <xs:attribute type="xs:string" use="optional" name="ref">
            <xs:annotation>
              <xs:documentation>The reference object for this parameter</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="session-properties">
        <xs:annotation>
          <xs:documentation></xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice>
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="session-property">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute type="xs:string" use="optional" name="encoding"></xs:attribute>
                      <xs:attribute type="xs:string" use="optional" name="mimeType"></xs:attribute>
                      <xs:attribute type="xs:string" use="optional" name="value"></xs:attribute>
                      <xs:attribute type="xs:string" name="key"></xs:attribute>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:sequence>
              <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"></xs:any>
            </xs:sequence>
          </xs:choice>
          <xs:attribute type="xs:string" use="optional" name="ref">
            <xs:annotation>
              <xs:documentation>The reference object for this parameter</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="outbound-properties">
        <xs:annotation>
          <xs:documentation></xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:choice>
            <xs:sequence>
              <xs:element minOccurs="0" maxOccurs="unbounded" name="outbound-property">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute type="xs:string" use="optional" name="encoding"></xs:attribute>
                      <xs:attribute type="xs:string" use="optional" name="mimeType"></xs:attribute>
                      <xs:attribute type="xs:string" use="optional" name="value"></xs:attribute>
                      <xs:attribute type="xs:string" name="key"></xs:attribute>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:sequence>
              <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"></xs:any>
            </xs:sequence>
          </xs:choice>
          <xs:attribute type="xs:string" use="optional" name="ref">
            <xs:annotation>
              <xs:documentation>The reference object for this parameter</xs:documentation>
            </xs:annotation>
          </xs:attribute>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute type="xs:string" use="optional" name="payload">
      <xs:annotation>
        <xs:documentation>&lt;p&gt;The Mule Payload&lt;/p&gt;</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" use="optional" name="encoding">
        <xs:annotation>
            <xs:documentation>The Mule Payload encoding</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" use="optional" name="mimeType">
        <xs:annotation>
            <xs:documentation>The Mule Payload mimeType</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute type="xs:string" use="optional" name="ref">
      <xs:annotation>
        <xs:documentation>The reference object for this parameter</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="WhenType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="with-attributes">
            <xs:annotation>
              <xs:documentation>Message processor parameters.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="with-attribute">
                  <xs:complexType>
                    <xs:complexContent>
                      <xs:extension xmlns="http://www.mulesoft.org/schema/mule/mock" base="AttributeObjectType">
                        <xs:attribute type="xs:string" use="optional" name="value-ref"></xs:attribute>
                      </xs:extension>
                    </xs:complexContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
              <xs:attribute type="xs:string" use="optional" name="ref">
                <xs:annotation>
                  <xs:documentation>The reference object for this parameter</xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="then-return">
            <xs:annotation>
              <xs:documentation>Expected return value.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:complexContent>
                <xs:extension xmlns="http://www.mulesoft.org/schema/mule/mock" base="MunitMuleMessageObjectType"></xs:extension>
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute type="xs:string" use="optional" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="messageProcessor">
          <xs:annotation>
            <xs:documentation>Message processor name.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="thenApplyTransformer-ref">
          <xs:annotation>
            <xs:documentation>Custom transformer to apply to the message</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/mock" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="SpyType" substitutionGroup="mule:abstract-message-processor" name="spy">
    <xs:annotation>
      <xs:documentation>&lt;p&gt;Define what the mock must return on a message processor call.&lt;/p&gt;
&lt;p/&gt;
&lt;p&gt;If the message processor doesn't return any value then there is no need to define an expect.&lt;/p&gt;
&lt;p/&gt;
&lt;p&gt;You can define the message processor parameters in the same order they appear in the API documentation. In
order to define the behaviour on that particular case.&lt;/p&gt;
&lt;p/&gt;</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="SpyType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="with-attributes">
            <xs:annotation>
              <xs:documentation>Sets of attributes to narrow-down a specific message processor</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="with-attribute">
                  <xs:complexType>
                    <xs:complexContent>
                      <xs:extension xmlns="http://www.mulesoft.org/schema/mule/mock" base="AttributeObjectType">
                        <xs:attribute type="xs:string" use="optional" name="value-ref"></xs:attribute>
                      </xs:extension>
                    </xs:complexContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
              <xs:attribute type="xs:string" use="optional" name="ref">
                <xs:annotation>
                  <xs:documentation>The reference object for this parameter</xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="assertions-before-call">
            <xs:annotation>
              <xs:documentation>Expected return value.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:group minOccurs="0" maxOccurs="unbounded" ref="mule:messageProcessorOrOutboundEndpoint"></xs:group>
              <xs:attribute type="xs:string" use="optional" name="text"></xs:attribute>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="assertions-after-call">
            <xs:annotation>
              <xs:documentation>Message processor parameters.</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:group minOccurs="0" maxOccurs="unbounded" ref="mule:messageProcessorOrOutboundEndpoint"></xs:group>
              <xs:attribute type="xs:string" use="optional" name="text"></xs:attribute>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute type="xs:string" use="optional" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="messageProcessor">
          <xs:annotation>
            <xs:documentation>Message processor name.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/mock" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="ThrowAnType" substitutionGroup="mule:abstract-message-processor" name="throw-an">
    <xs:annotation>
      <xs:documentation>&lt;p&gt;Expect to throw an exception when message processor is called. &lt;/p&gt;
&lt;p/&gt;</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="ThrowAnType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="with-attributes">
            <xs:annotation>
              <xs:documentation>list of expected attributes</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:sequence>
                <xs:element minOccurs="0" maxOccurs="unbounded" name="with-attribute">
                  <xs:complexType>
                    <xs:complexContent>
                      <xs:extension xmlns="http://www.mulesoft.org/schema/mule/mock" base="AttributeObjectType">
                        <xs:attribute type="xs:string" use="optional" name="value-ref"></xs:attribute>
                      </xs:extension>
                    </xs:complexContent>
                  </xs:complexType>
                </xs:element>
              </xs:sequence>
              <xs:attribute type="xs:string" use="optional" name="ref">
                <xs:annotation>
                  <xs:documentation>The reference object for this parameter</xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute type="xs:string" use="optional" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="exception-ref">
          <xs:annotation>
            <xs:documentation>Java Exception full qualified name.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="whenCalling">
          <xs:annotation>
            <xs:documentation>Message processor name.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/mock" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="VerifyCallType" substitutionGroup="mule:abstract-message-processor" name="verify-call">
    <xs:annotation>
      <xs:documentation>Check that the message processor was called with some specified parameters
&lt;p/&gt;</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="VerifyCallType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="with-attributes">
                <xs:annotation>
                    <xs:documentation>Message processor parameters.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element minOccurs="0" maxOccurs="unbounded" name="with-attribute">
                            <xs:complexType>
                                <xs:complexContent>
                                    <xs:extension xmlns="http://www.mulesoft.org/schema/mule/mock" base="AttributeObjectType">
                                        <xs:attribute type="xs:string" use="optional" name="value-ref"></xs:attribute>
                                    </xs:extension>
                                </xs:complexContent>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute type="xs:string" use="optional" name="ref">
                        <xs:annotation>
                            <xs:documentation>The reference object for this parameter</xs:documentation>
                        </xs:annotation>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute type="xs:string" use="optional" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="messageProcessor">
          <xs:annotation>
            <xs:documentation>Message processor Id</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/mock" type="integerType" use="optional" name="times">
          <xs:annotation>
            <xs:documentation>Number of times the message processor has to be called</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/mock" type="integerType" use="optional" name="atLeast">
          <xs:annotation>
            <xs:documentation>Number of time the message processor has to be called at least.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute xmlns="http://www.mulesoft.org/schema/mule/mock" type="integerType" use="optional" name="atMost">
          <xs:annotation>
            <xs:documentation>Number of times the message processor has to be called at most.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element xmlns="http://www.mulesoft.org/schema/mule/mock" xmlns:mule="http://www.mulesoft.org/schema/mule/core" type="OutboundEndpointType" substitutionGroup="mule:abstract-message-processor" name="outbound-endpoint">
    <xs:annotation>
      <xs:documentation>Reset mock behaviour
&lt;p/&gt;</xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="OutboundEndpointType">
    <xs:complexContent>
      <xs:extension xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:abstractMessageProcessorType">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="1" name="return-invocation-properties">
            <xs:annotation>
              <xs:documentation>invocation properties</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:choice>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="return-invocation-property">
                    <xs:complexType>
                      <xs:simpleContent>
                        <xs:extension base="xs:string">
                            <xs:attribute type="xs:string" use="optional" name="encoding"></xs:attribute>
                          <xs:attribute type="xs:string" use="optional" name="mimeType"></xs:attribute>
                          <xs:attribute type="xs:string" use="optional" name="value"></xs:attribute>
                          <xs:attribute type="xs:string" name="key"></xs:attribute>
                        </xs:extension>
                      </xs:simpleContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:sequence>
                  <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"></xs:any>
                </xs:sequence>
              </xs:choice>
              <xs:attribute type="xs:string" use="optional" name="ref">
                <xs:annotation>
                  <xs:documentation>The reference object for this parameter</xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="return-inbound-properties">
            <xs:annotation>
              <xs:documentation>inbound properties</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:choice>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="return-inbound-property">
                    <xs:complexType>
                      <xs:simpleContent>
                        <xs:extension base="xs:string">
                          <xs:attribute type="xs:string" use="optional" name="value"></xs:attribute>
                          <xs:attribute type="xs:string" name="key"></xs:attribute>
                        </xs:extension>
                      </xs:simpleContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:sequence>
                  <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"></xs:any>
                </xs:sequence>
              </xs:choice>
              <xs:attribute type="xs:string" use="optional" name="ref">
                <xs:annotation>
                  <xs:documentation>The reference object for this parameter</xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="return-session-properties">
            <xs:annotation>
              <xs:documentation>invocation session properties</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:choice>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="return-session-property">
                    <xs:complexType>
                      <xs:simpleContent>
                        <xs:extension base="xs:string">
                          <xs:attribute type="xs:string" use="optional" name="value"></xs:attribute>
                          <xs:attribute type="xs:string" name="key"></xs:attribute>
                        </xs:extension>
                      </xs:simpleContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:sequence>
                  <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"></xs:any>
                </xs:sequence>
              </xs:choice>
              <xs:attribute type="xs:string" use="optional" name="ref">
                <xs:annotation>
                  <xs:documentation>The reference object for this parameter</xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="return-outbound-properties">
            <xs:annotation>
              <xs:documentation>oubound properties</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:choice>
                <xs:sequence>
                  <xs:element minOccurs="0" maxOccurs="unbounded" name="return-outbound-property">
                    <xs:complexType>
                      <xs:simpleContent>
                        <xs:extension base="xs:string">
                          <xs:attribute type="xs:string" use="optional" name="value"></xs:attribute>
                          <xs:attribute type="xs:string" name="key"></xs:attribute>
                        </xs:extension>
                      </xs:simpleContent>
                    </xs:complexType>
                  </xs:element>
                </xs:sequence>
                <xs:sequence>
                  <xs:any minOccurs="0" maxOccurs="unbounded" processContents="lax"></xs:any>
                </xs:sequence>
              </xs:choice>
              <xs:attribute type="xs:string" use="optional" name="ref">
                <xs:annotation>
                  <xs:documentation>The reference object for this parameter</xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" name="assertions">
            <xs:annotation>
              <xs:documentation>assertions</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:group minOccurs="0" maxOccurs="unbounded" ref="mule:messageProcessorOrOutboundEndpoint"></xs:group>
              <xs:attribute type="xs:string" use="optional" name="text"></xs:attribute>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
        <xs:attribute type="xs:string" use="optional" name="config-ref">
          <xs:annotation>
            <xs:documentation>Specify which configuration to use for this invocation.</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="required" name="address">
          <xs:annotation>
            <xs:documentation>the address</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="returnPayload">
          <xs:annotation>
            <xs:documentation>the Return Payload</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="exception-ref">
          <xs:annotation>
            <xs:documentation>in case it fails</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute type="xs:string" use="optional" name="thenApplyTransformer-ref">
          <xs:annotation>
            <xs:documentation>custom transformer to be applied to the message</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:simpleType name="OnNoTokenPolicyEnumType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="EXCEPTION"></xs:enumeration>
          <xs:enumeration value="STOP_FLOW"></xs:enumeration>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="integerType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:integer"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="decimalType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:decimal"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="floatType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:float"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="doubleType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:double"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="dateTimeType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:dateTime"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="longType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:long"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="byteType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:byte"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="booleanType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:boolean"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="anyUriType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:anyURI"></xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
  <xs:simpleType name="charType">
    <xs:union>
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:minLength value="1"></xs:minLength>
          <xs:maxLength value="1"></xs:maxLength>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType>
        <xs:restriction xmlns:mule="http://www.mulesoft.org/schema/mule/core" base="mule:propertyPlaceholderType"></xs:restriction>
      </xs:simpleType>
    </xs:union>
  </xs:simpleType>
</xs:schema>